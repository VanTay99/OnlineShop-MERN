[{"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\index.js":"1","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\App.js":"2","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reportWebVitals.js":"3","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Home\\index.js":"4","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Signin\\index.js":"5","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Signup\\index.js":"6","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\Layout\\index.js":"7","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\UI\\Input\\index.js":"8","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\Header\\index.js":"9","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\store\\index.js":"10","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\index.js":"11","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\index.js":"12","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\auth.action.js":"13","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\constants.js":"14","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\auth.reducers.js":"15","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\helpers\\axios.js":"16","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\urlConfig.js":"17","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\HOC\\PrivateRoute.js":"18","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\user.actions.js":"19","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\user.reducer.js":"20","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Products\\index.js":"21","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Orders\\index.js":"22","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\category.reducer.js":"23","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\product.reducer.js":"24","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\order.reducer.js":"25","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Category\\index.js":"26","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\category.action.js":"27","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\product.action.js":"28","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\UI\\Modal\\index.js":"29","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\initialData.action.js":"30","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Category\\components\\UpdateCategoriesModal.js":"31","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Category\\components\\AddCategoryModal.js":"32","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\NewPage\\index.js":"33","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\helpers\\linearCategories.js":"34","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\page.action.js":"35","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\page.reducer.js":"36"},{"size":731,"mtime":1629104924835,"results":"37","hashOfConfig":"38"},{"size":1400,"mtime":1631498550636,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":384,"mtime":1629191137010,"results":"41","hashOfConfig":"38"},{"size":1784,"mtime":1629981375357,"results":"42","hashOfConfig":"38"},{"size":3681,"mtime":1629981402162,"results":"43","hashOfConfig":"38"},{"size":960,"mtime":1630980680167,"results":"44","hashOfConfig":"38"},{"size":1540,"mtime":1631594409797,"results":"45","hashOfConfig":"38"},{"size":1881,"mtime":1629945331737,"results":"46","hashOfConfig":"38"},{"size":310,"mtime":1630843307852,"results":"47","hashOfConfig":"38"},{"size":551,"mtime":1631502896272,"results":"48","hashOfConfig":"38"},{"size":170,"mtime":1631501794012,"results":"49","hashOfConfig":"38"},{"size":2085,"mtime":1630911527171,"results":"50","hashOfConfig":"38"},{"size":1829,"mtime":1631177663865,"results":"51","hashOfConfig":"38"},{"size":1371,"mtime":1630668279847,"results":"52","hashOfConfig":"38"},{"size":943,"mtime":1630669159430,"results":"53","hashOfConfig":"38"},{"size":151,"mtime":1629969719344,"results":"54","hashOfConfig":"38"},{"size":445,"mtime":1630898017412,"results":"55","hashOfConfig":"38"},{"size":880,"mtime":1630668295624,"results":"56","hashOfConfig":"38"},{"size":815,"mtime":1629110430264,"results":"57","hashOfConfig":"38"},{"size":7594,"mtime":1630675527856,"results":"58","hashOfConfig":"38"},{"size":240,"mtime":1629173873617,"results":"59","hashOfConfig":"38"},{"size":3634,"mtime":1631592439630,"results":"60","hashOfConfig":"38"},{"size":392,"mtime":1629949988805,"results":"61","hashOfConfig":"38"},{"size":0,"mtime":1629191337595,"results":"62","hashOfConfig":"38"},{"size":10477,"mtime":1631593063916,"results":"63","hashOfConfig":"38"},{"size":2849,"mtime":1630911953345,"results":"64","hashOfConfig":"38"},{"size":218,"mtime":1630668315568,"results":"65","hashOfConfig":"38"},{"size":1229,"mtime":1631591916077,"results":"66","hashOfConfig":"38"},{"size":691,"mtime":1630668310738,"results":"67","hashOfConfig":"38"},{"size":4994,"mtime":1631593348799,"results":"68","hashOfConfig":"38"},{"size":1891,"mtime":1631592225123,"results":"69","hashOfConfig":"38"},{"size":6991,"mtime":1631614669065,"results":"70","hashOfConfig":"38"},{"size":454,"mtime":1631594169975,"results":"71","hashOfConfig":"38"},{"size":795,"mtime":1631501669834,"results":"72","hashOfConfig":"38"},{"size":774,"mtime":1631503496143,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1n7wzla",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"76"},"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\index.js",[],["163","164"],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\App.js",["165"],"import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './containers/Home';\nimport Signin from './containers/Signin';\nimport Signup from './containers/Signup';\nimport PrivateRoute from './components/HOC/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isUserLoggedIn, getInitialData } from './actions';\nimport Products from './containers/Products';\nimport Orders from './containers/Orders';\nimport Category from './containers/Category';\nimport { NewPage } from './containers/NewPage';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    if (auth.authenticate) {\n      dispatch(getInitialData());\n    }\n  }, [auth.authenticate]);\n  return (\n    <div className=\"App\">\n\n      <Switch>\n\n        <PrivateRoute path=\"/\" exact component={Home} />\n        <PrivateRoute path=\"/page\" exact component={NewPage} />\n        <PrivateRoute path=\"/category\" component={Category} />\n        <PrivateRoute path=\"/products\" component={Products} />\n        <PrivateRoute path=\"/orders\" component={Orders} />\n\n        <Route path=\"/signin\" component={Signin} />\n        <Route path=\"/signup\" component={Signup} />\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reportWebVitals.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Home\\index.js",["166","167","168","169","170"],"import React from 'react';\r\nimport { Jumbotron , Col,Row, Container} from 'react-bootstrap';\r\nimport Layout from '../../components/Layout';\r\nimport './style.css';\r\nimport { NavLink } from 'react-router-dom';\r\n/**\r\n* @author\r\n* @function Home\r\n**/\r\n\r\nconst Home = (props) => {\r\n\r\n \r\n  return(\r\n\r\n      <Layout sidebar>\r\n        \r\n      </Layout>\r\n     \r\n   )\r\n }\r\n\r\nexport default Home","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Signin\\index.js",["171","172","173"],"import React, { useEffect, useState } from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport {login} from '../../actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function Signin\r\n**/\r\n\r\nconst Signin = (props) => {\r\n  \r\n  const [email,setEmail]=useState('');\r\n  const[password,setPassword]=useState('');\r\n  const [error,serError]=useState('');\r\n  const auth =useSelector(state=>state.auth);\r\n  \r\n  const dispatch=useDispatch();\r\n\r\n\r\n  const userLogin= (e)=>{\r\n    e.preventDefault();\r\n    const user={\r\n      email,password\r\n    }\r\n    dispatch(login(user));\r\n  }\r\n  if(auth.authenticate){\r\n    return <Redirect to={`/`}/>\r\n  }\r\n  return (\r\n    <Layout>\r\n      <Container style={{paddingTop:'20px'}}>\r\n        <Row style={{ marginTop: '50px' }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={userLogin}>\r\n              <Input\r\n                Label=\"Email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <Input\r\n                Label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button variant=\"primary\" type=\"submit\"  style={{ marginTop: \"10px\"}}>\r\n                Sign In\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default Signin","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Signup\\index.js",["174","175","176"],"import React, { useReducer, useState } from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signup }  from '../../actions'\r\n/**\r\n* @author\r\n* @function Signup\r\n**/\r\n\r\nconst Signup = (props) => {\r\n\r\n    const [firstName,setFirstName]=useState('');\r\n    const [lastName,setLastName]=useState('');\r\n    const [email,setEmail]=useState('');\r\n    const[password,setPassword]=useState('');\r\n    const [error,setError]=useState('');\r\n    const auth = useSelector(state =>state.auth);\r\n    const user =useSelector(state=>state.user);\r\n    const dispatch =useDispatch();\r\n\r\n    const userSignup =(e)=>{\r\n\r\n        e.preventDefault();\r\n        const user ={\r\n            firstName,lastName,email,password\r\n        }\r\n        dispatch(signup(user));\r\n    }\r\n    if(auth.authenticate){\r\n        return <Redirect to={`/`}/>\r\n      }\r\n    if(user.loading){\r\n        return <p>\r\n            loading....!\r\n        </p>\r\n    }\r\n      \r\n    return (\r\n        <Layout>\r\n            <Container style={{paddingTop:'20px'}}>\r\n                {user.message}\r\n                <Row style={{ marginTop: '50px' }}>\r\n                    <Col md={{ span: 6, offset: 3 }}>\r\n                        <Form onSubmit={userSignup}>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Input \r\n                                        Label=\"FirstName\" \r\n                                        placeholder=\"First Name\" \r\n                                        value={firstName}\r\n                                        type=\"firstname\"\r\n                                        onChange={(e)=>setFirstName(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <Input \r\n                                        Label=\"LastName\" \r\n                                        placeholder=\"Last Name\" \r\n                                        value={lastName} \r\n                                        type=\"lastname\"\r\n                                        onChange={(e)=>setLastName(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                                    <Input \r\n                                        Label=\"Email\" \r\n                                        placeholder=\"Email\" \r\n                                        value={email}\r\n                                        type=\"email\"\r\n                                        onChange={(e)=>setEmail(e.target.value)}\r\n                                    />\r\n\r\n                                    <Input \r\n                                        Label=\"Password\" \r\n                                        placeholder=\"Password\" \r\n                                        value={password} \r\n                                        type=\"password\"\r\n                                        onChange={(e)=>setPassword(e.target.value)}\r\n                                    />\r\n                        \r\n                            <Button variant=\"primary\" type=\"submit\" style={{ marginTop:\"10px\"}}>\r\n                                Sign Up\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </Layout>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Signup","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\Layout\\index.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\UI\\Input\\index.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\Header\\index.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\store\\index.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\index.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\index.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\auth.action.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\constants.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\auth.reducers.js",["177","178"],"import { authContants } from \"../actions/constants\";\r\n\r\nconst initState={\r\n   token:null,\r\n   user:{\r\n       firstName:'',\r\n       lastName:'',\r\n       email:'',\r\n       picture:''\r\n   },\r\n   auhenticate:false,\r\n   authenticating:false,\r\n   loading: false,\r\n   error:null,\r\n   message:''\r\n\r\n};\r\n\r\nexport default (state=initState,action)=>{\r\n\r\n   // console.log(action);\r\n\r\n    switch(action.type){\r\n        case authContants.LOGIN_REQUEST:\r\n            state={\r\n                ...state,\r\n                authenticating:true\r\n            }\r\n            break; \r\n        case authContants.LOGIN_SUCCESS:\r\n            state={\r\n                ...state,\r\n                user:action.payload.user,\r\n                token:action.payload.token,\r\n                authenticate:true,\r\n                authenticating:false\r\n            }\r\n            break;\r\n        case authContants.LOGOUT_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case authContants.LOGOUT_SUCCESS:\r\n            state={\r\n                ...initState\r\n            }\r\n            break;\r\n        case authContants.LOGOUT_FAILURE:\r\n            state={\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading:false\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n   \r\n\r\n}","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\helpers\\axios.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\urlConfig.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\HOC\\PrivateRoute.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\user.actions.js",["179"],"import axios from \"../helpers/axios\";\r\n\r\nimport { authContants, userContants } from \"./constants\";\r\nexport const signup = (user) => {\r\n\r\n    //console.log(user);\r\n    return async (dispatch) => {\r\n        dispatch({ type: userContants.USER_REGISTER_REQUEST });\r\n        const res = await axios.post(`/admin/signup`, {\r\n            ...user\r\n        });\r\n        if (res.status === 201) {\r\n            const {message } = res.data;\r\n            dispatch({\r\n                type: userContants.USER_REGISTER_SUCCESS,\r\n                payload: {\r\n                    message\r\n                }\r\n\r\n            });\r\n        }\r\n        else {\r\n            if (res.status === 400) {\r\n                dispatch({\r\n                    type: userContants.USER_REGISTER_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\user.reducer.js",["180","181"],"import { userContants } from \"../actions/constants\"\r\n\r\nconst initState={\r\n    error:null,\r\n    message:'',\r\n    loading : false\r\n}\r\nexport default(state=initState,action)=>{\r\n    switch(action.type){\r\n        case userContants.USER_REGISTER_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case userContants.USER_REGISTER_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading : false,\r\n                message: action.payload.message\r\n            }\r\n            break;\r\n        case userContants.USER_REGISTER_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        break;\r\n    }\r\n    return state;\r\n}","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Products\\index.js",["182","183"],"import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Container, Row, Col, Table, Button } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addProduct } from \"../../actions/product.action\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Products\r\n **/\r\n\r\nconst Products = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [productDetailModal, setProductDetailModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const submitProductForm = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n    dispatch(addProduct(form));\r\n   \r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {product.products.length > 0\r\n            ? product.products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>2</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>{product.category.name}</td>\r\n                  <td>\r\n                    <button  type=\"button\" className=\"btn btn-info\"  onClick={() => showProductDetailsModal(product)}>\r\n                      info\r\n                    </button>\r\n                    <button button type=\"button\" className=\"btn btn-danger\"\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          productId: product._id,\r\n                        };\r\n                        \r\n                      }}\r\n                    >\r\n                      del\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Product\"}\r\n        onSubmit={submitProductForm}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          value={name}\r\n          placeholder={`Product Name`}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          placeholder={`Quantity`}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Price\"\r\n          value={price}\r\n          placeholder={`Price`}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={`Description`}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <br/>\r\n        <select\r\n          className=\"form-control\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {productPictures.length > 0\r\n          ? productPictures.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null}\r\n          <br/>\r\n        <input\r\n          type=\"file\"\r\n          name=\"productPicture\"\r\n          onChange={handleProductPictures}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailModal(false);\r\n  };\r\n\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailModal(true);\r\n  };\r\n\r\n  const renderProductDetailsModal = () => {\r\n    if (!productDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show={productDetailModal}\r\n        handleClose={handleCloseProductDetailsModal}\r\n        modalTitle={\"Product Details\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{productDetails.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Product Pictures</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {productDetails.productPictures.map((picture) => (\r\n                <div className=\"productImgContainer\">\r\n                  <img src={generatePublicUrl(picture.img)} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Products</h3>\r\n              <Button onClick={handleShow}>Add</Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderProductDetailsModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Orders\\index.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\category.reducer.js",["184","185","186","187"],"import { categoryContants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if (parentId == undefined) {\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type: category.type,\r\n                children: []\r\n\r\n            }\r\n        ];\r\n\r\n    }\r\n    for (let cat of categories) {\r\n\r\n        if (cat._id == parentId) {\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                parentId: category.parentId,\r\n                type: category.type,\r\n                children: []\r\n            };\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            })\r\n        }\r\n        else {\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n    return myCategories;\r\n\r\n}\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case categoryContants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const category = action.payload.category;\r\n            const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n           // console.log('update categories', updatedCategories);\r\n            state = {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false,\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case categoryContants.UPDATE_CATEGORIES_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case categoryContants.UPDATE_CATEGORIES_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false\r\n            }\r\n            break;\r\n        case categoryContants.UPDATE_CATEGORIES_FAILURE:\r\n            state={\r\n                ...state,\r\n                error : action.payload.error,\r\n                loading:false\r\n            }\r\n            break;\r\n        case categoryContants.DELETE_CATEGORIES_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case categoryContants.DELETE_CATEGORIES_SUCCESS:\r\n            state={\r\n                ...state,\r\n                loading:false\r\n            }\r\n            break;\r\n        case categoryContants.DELETE_CATEGORIES_FAILURE:\r\n            state={\r\n                ...state,\r\n                loading:false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\product.reducer.js",["188","189"],"import { productContants } from \"../actions/constants\";\r\n\r\nconst initialState={\r\n    products:[]\r\n};\r\nexport default  (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case productContants.GET_ALL_PRODUCTS_SUCCESS:\r\n            state={\r\n                ...state,\r\n                products:action.payload.products\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\order.reducer.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Category\\index.js",["190","191","192","193","194","195","196"],"import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    getAllCategory,\r\n    addCategory,\r\n    updateCategories,\r\n    deleteCategories as deleteCategoriesAction\r\n} from '../../actions';\r\nimport Layout from '../../components/Layout';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport {\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown,\r\n    IoIosAdd,\r\n    IoIosTrash,\r\n    IoIosCloudUpload\r\n} from \"react-icons/io\";\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css'\r\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\r\nimport AddCategoryModal from './components/AddCategoryModal';\r\nimport './style.css';\r\n/**\r\n* @author\r\n* @function Category\r\n**/\r\n\r\nconst Category = (props) => {\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdatecategoryModal] = useState(false);\r\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!category.loading) {\r\n            setShow(false);\r\n        }\r\n    }, [category.loading]);\r\n    const handleClose = () => {\r\n\r\n        const form = new FormData();\r\n        if (categoryName === \"\") {\r\n            alert('Category name is required ');\r\n            setShow(false);\r\n            return;\r\n        }\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n        let Mycategories = [];\r\n        for (let category of categories) {\r\n            Mycategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n\r\n            );\r\n        }\r\n        return Mycategories;\r\n    }\r\n    const createCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({\r\n                value: category._id,\r\n                name: category.name,\r\n                parentId: category.parentId,\r\n                type: category.type\r\n            });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n\r\n    }\r\n    const updateCategory = () => {\r\n        updateCheckAndExpandedCategories();\r\n        setUpdatecategoryModal(true);\r\n    }\r\n    const updateCheckAndExpandedCategories = () => {\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && checkedArray.push(category);\r\n        })\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n\r\n    }\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckArray = checkedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckArray);\r\n\r\n        } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n\r\n    }\r\n    const updateCategoriesForm = () => {\r\n        const form = new FormData();\r\n        expandedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        })\r\n        checkedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        })\r\n        dispatch(updateCategories(form));\r\n        setUpdatecategoryModal(false);\r\n    }\r\n\r\n    const deleteCategory = () => {\r\n        updateCheckAndExpandedCategories();\r\n        setDeleteCategoryModal(true);\r\n    }\r\n    const deleteCategories = () => {\r\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\r\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\r\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n        if (checkedIdsArray.length > 0) {\r\n            dispatch(deleteCategoriesAction(checkedIdsArray))\r\n                .then(result => {\r\n                    if (result) {\r\n                        dispatch(getAllCategory())\r\n                        setDeleteCategoryModal(false)\r\n                    }\r\n                })\r\n        }\r\n        setDeleteCategoryModal(false);\r\n\r\n    }\r\n    const renderDeleteCategoryModal = () => {\r\n        console.log('delete', checkedArray);\r\n        return (\r\n            <Modal\r\n                modalTitle=\"Confirm\"\r\n                show={deleteCategoryModal}\r\n                handleClose={() => setDeleteCategoryModal(false)}\r\n                buttons={[\r\n                    {\r\n                        label: 'No',\r\n                        color: 'primary',\r\n                        onClick: () => {\r\n                            alert('no');\r\n                        }\r\n\r\n                    },\r\n                    {\r\n                        label: 'yes',\r\n                        color: 'danger',\r\n                        onClick: deleteCategories\r\n\r\n                    }\r\n                ]}\r\n            >\r\n                <h5>Expanded</h5>\r\n                {expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n                <h5>Checked</h5>\r\n                {checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n            </Modal>\r\n        );\r\n    }\r\n    const categoryList = createCategoryList(category.categories);\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Category</h3>\r\n                            <div className=\"actionBtnContainer\">\r\n                                <span> Actions : </span>\r\n                                <Button variant=\"primary\" onClick={handleShow}><IoIosAdd /><span>Add</span></Button>\r\n                                <Button variant=\"danger\" onClick={deleteCategory}><IoIosTrash /><span>Delete</span></Button>\r\n                                <Button variant=\"info\" onClick={updateCategory}><IoIosCloudUpload /><span>Edit</span></Button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        {/* <ul>\r\n                            {renderCategories(category.categories)}\r\n\r\n                        </ul> */}\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoIosCheckbox />,\r\n                                uncheck: <IoIosCheckboxOutline />,\r\n                                halfCheck: <IoIosCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />,\r\n                            }}\r\n\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n            <AddCategoryModal\r\n                show={show}\r\n                handleClose={() => setShow(false)}\r\n                onSubmit={handleClose}\r\n                modalTitle={'Add New Category'}\r\n                size='lg'\r\n                categoryName={categoryName}\r\n                setCategoryName={setCategoryName}\r\n                parentCategoryId={parentCategoryId}\r\n                setParentCategoryId={setParentCategoryId}\r\n                categoryList={categoryList}\r\n                handleCategoryImage={handleCategoryImage}\r\n            />\r\n            <UpdateCategoriesModal\r\n                show={updateCategoryModal}\r\n                handleClose={()=>setUpdatecategoryModal(false)}\r\n                onSubmit={updateCategoriesForm}\r\n                modalTitle={'Update Categories'}\r\n                size='lg'\r\n                expandedArray={expandedArray}\r\n                checkedArray={checkedArray}\r\n                handleCategoryInput={handleCategoryInput}\r\n                categoryList={categoryList}\r\n            />\r\n            {renderDeleteCategoryModal()}\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Category","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\category.action.js",["197"],"import axios from \"../helpers/axios\"\r\nimport { categoryContants } from \"./constants\";\r\n\r\nconst getAllCategory = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: categoryContants.GET_ALL_CATEGORIES_REQUEST,\r\n        });\r\n        const res = await axios.get(`category/getcategory`);\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n            const { categoryList } = res.data;\r\n            dispatch({\r\n                type: categoryContants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories: categoryList }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: categoryContants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload: { error: res.data.error }\r\n\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryContants.ADD_NEW_CATEGORY_REQUEST });\r\n        try {\r\n            const res = await axios.post(`/category/create`, form);\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: categoryContants.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: { category: res.data.category }\r\n                });\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: categoryContants.ADD_NEW_CATEGORY_FAILURE,\r\n                    payload: res.data.error\r\n                });\r\n            }\r\n        } catch (error) {\r\n\r\n           // console.log(error.response);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateCategories = (form) => {\r\n    return async dispatch => {\r\n        dispatch({type: categoryContants.UPDATE_CATEGORIES_REQUEST});\r\n        const res = await axios.post(`/category/update`, form);\r\n        if (res.status === 201) {\r\n            dispatch({type:categoryContants.UPDATE_CATEGORIES_SUCCESS});\r\n            dispatch(getAllCategory());\r\n        }\r\n        else {\r\n            const {error}=res.data;\r\n           dispatch({\r\n               type:categoryContants.UPDATE_CATEGORIES_FAILURE,\r\n               paload:{error}\r\n           });\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCategories = (ids) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryContants.DELETE_CATEGORIES_REQUEST });\r\n        const res = await axios.post(`/category/delete`, {\r\n            payload: {\r\n                ids\r\n            }\r\n        });\r\n        if (res.status == 201) {\r\n            dispatch(getAllCategory());\r\n            dispatch({ type: categoryContants.DELETE_CATEGORIES_SUCCESS });\r\n           \r\n        } else {\r\n            const { error } = res.data;\r\n            dispatch({\r\n                type: categoryContants.DELETE_CATEGORIES_FAILURE,\r\n                payload: { error}\r\n            });\r\n        }\r\n    }\r\n}\r\nexport {\r\n    getAllCategory\r\n}","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\product.action.js",["198"],"import axios from \"../helpers/axios\";\r\n\r\nexport const addProduct=form =>{\r\n    return async dispatch =>{\r\n        const res = await axios.post(`product/create`,form);\r\n        //console.log(res);\r\n        \r\n    } \r\n}\r\n","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\components\\UI\\Modal\\index.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\initialData.action.js",["199"],"import {\r\n    categoryContants,\r\n    initialDataConstants,\r\n    productContants,\r\n   \r\n  } from \"./constants\";\r\n  import axios from \"../helpers/axios\";\r\n  \r\n  export const getInitialData = () => {\r\n    return async (dispatch) => \r\n    {\r\n      const res = await axios.post(`/initialData`);\r\n      if (res.status === 200) {\r\n        const { categories, products } = res.data;\r\n        dispatch({\r\n          type: categoryContants.GET_ALL_CATEGORIES_SUCCESS,\r\n          payload: { categories }\r\n        });\r\n        dispatch({\r\n          type: productContants.GET_ALL_PRODUCTS_SUCCESS,\r\n          payload: { products }\r\n        });\r\n       //console.log(res);\r\n      }\r\n      \r\n    }\r\n   \r\n  }","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Category\\components\\UpdateCategoriesModal.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\Category\\components\\AddCategoryModal.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\containers\\NewPage\\index.js",["200","201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport linearCategories from \"../../helpers/linearCategories\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPage } from '../../actions'\r\n/**\r\n * @author\r\n * @function NewPage\r\n **/\r\n\r\nexport const NewPage = (props) => {\r\n    const [createModal, setCreateModal] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const category = useSelector(state => state.category);\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [banners, setBanners] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n\r\n    useEffect(() => {\r\n        setCategories(linearCategories(category.categories));\r\n    }, [category]);\r\n\r\n    useEffect(() => {\r\n        console.log(page);\r\n        if (!page.loading) {\r\n            setCreateModal(false);\r\n            setTitle('');\r\n            setCategoryId('');\r\n            setDesc('');\r\n            setProducts([]);\r\n            setBanners([]);\r\n        }\r\n    }, [page]);\r\n    const onCategoryChange = (e) => {\r\n        const category = categories.find(category => category.value == e.target.value);\r\n        setCategoryId(e.target.value);\r\n        setType(category.type);\r\n    }\r\n\r\n    const handleProductImages = (e) => {\r\n        console.log(e);\r\n        setProducts([...products, e.target.files[0]]);\r\n    }\r\n    const handleBannerImages = (e) => {\r\n        console.log(e);\r\n        setBanners([...banners, e.target.files[0]]);\r\n    }\r\n    const submitPageForm = (e) => {\r\n\r\n        if (title === \"\") {\r\n            alert('Title is required');\r\n            setCreateModal(false);\r\n            return;\r\n        }\r\n\r\n        const form = new FormData();\r\n        form.append('title', title);\r\n        form.append('description', desc);\r\n        form.append('category', categoryId);\r\n        form.append('type', type);\r\n        banners.forEach((banner, index) => {\r\n            form.append('banners', banner);\r\n        });\r\n        products.forEach((product, index) => {\r\n            form.append('products', product);\r\n        });\r\n\r\n        dispatch(createPage(form));\r\n    }\r\n\r\n    const renderCreatePageModal = () => {\r\n        return (\r\n            <Modal\r\n                show={createModal}\r\n                modalTitle={'Create New Page'}\r\n                handleClose={() => setCreateModal(false)}\r\n                onSubmit={submitPageForm}\r\n            >\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            {/* <select className=\"form-control \"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                            >\r\n                                <option value=\"\">Select Category</option>\r\n                                {\r\n                                    categories.map(cat =>\r\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                                    )\r\n                                }\r\n                            </select> */}\r\n                            <Input\r\n                                type=\"select\"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                                options={categories}\r\n                                placeholder={'Select Category'}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                placeholder={'Page Title'}\r\n                                className=\"\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={desc}\r\n                                onChange={(e) => setDesc(e.target.value)}\r\n                                placeholder={'Page Desc'}\r\n                                className=\"\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    {\r\n                        banners.length > 0 ?\r\n                            banners.map((banner, index) =>\r\n                                <Row key={index}>\r\n                                    <Col>{banner.name}</Col>\r\n                                </Row>\r\n                            ) : null\r\n                    }\r\n\r\n                    <Row>\r\n                        <p>Images Banners</p>\r\n                        <Col>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"file\"\r\n                                name=\"banners\"\r\n                                onChange={handleBannerImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    {\r\n                        products.length > 0 ?\r\n                            products.map((product, index) =>\r\n                                <Row key={index}>\r\n                                    <Col>{product.name}</Col>\r\n                                </Row>\r\n                            ) : null\r\n                    }\r\n\r\n                    <Row>\r\n                        <p> Images Product</p>\r\n                        <Col>\r\n                            <Input\r\n                                className=\"form-control\"\r\n                                type=\"file\"\r\n                                name=\"products\"\r\n                                onChange={handleProductImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            {\r\n                page.loading ?\r\n                    <p> Create Page___please wait</p>\r\n                    :\r\n                    <>\r\n                        {renderCreatePageModal()}\r\n                        <button onClick={() => setCreateModal(true)}>Create Page</button>\r\n                    </>\r\n            }\r\n\r\n        </Layout>\r\n    );\r\n};\r\n","D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\helpers\\linearCategories.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\actions\\page.action.js",[],"D:\\Course IT\\OnlineShop-MERN\\admin-app\\src\\reducers\\page.reducer.js",["203","204"],"import { pageContants } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    error: null,\r\n    loading: false,\r\n    page: {}\r\n}\r\nexport default (state = initState, action)=>{\r\n    switch (action.type) {\r\n        case pageContants.CREATE_PAGE_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case pageContants.CREATE_PAGE_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n        case pageContants.CREATE_PAGE_FAILURE:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":27,"column":6,"nodeType":"211","endLine":27,"endColumn":25,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":19},{"ruleId":"213","severity":1,"message":"217","line":2,"column":22,"nodeType":"215","messageId":"216","endLine":2,"endColumn":25},{"ruleId":"213","severity":1,"message":"218","line":2,"column":26,"nodeType":"215","messageId":"216","endLine":2,"endColumn":29},{"ruleId":"213","severity":1,"message":"219","line":2,"column":31,"nodeType":"215","messageId":"216","endLine":2,"endColumn":40},{"ruleId":"213","severity":1,"message":"220","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":17},{"ruleId":"213","severity":1,"message":"221","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":26},{"ruleId":"213","severity":1,"message":"222","line":18,"column":10,"nodeType":"215","messageId":"216","endLine":18,"endColumn":15},{"ruleId":"213","severity":1,"message":"223","line":18,"column":16,"nodeType":"215","messageId":"216","endLine":18,"endColumn":24},{"ruleId":"213","severity":1,"message":"224","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":27},{"ruleId":"213","severity":1,"message":"222","line":19,"column":12,"nodeType":"215","messageId":"216","endLine":19,"endColumn":17},{"ruleId":"213","severity":1,"message":"225","line":19,"column":18,"nodeType":"215","messageId":"216","endLine":19,"endColumn":26},{"ruleId":"226","severity":1,"message":"227","line":19,"column":1,"nodeType":"228","endLine":61,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":23,"column":5,"nodeType":"231","messageId":"232","endLine":57,"endColumn":6},{"ruleId":"213","severity":1,"message":"233","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":22},{"ruleId":"226","severity":1,"message":"227","line":8,"column":1,"nodeType":"228","endLine":32,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":9,"column":5,"nodeType":"231","messageId":"232","endLine":30,"endColumn":6},{"ruleId":"213","severity":1,"message":"234","line":93,"column":31,"nodeType":"215","messageId":"216","endLine":93,"endColumn":38},{"ruleId":"235","severity":1,"message":"236","line":224,"column":19,"nodeType":"237","endLine":224,"endColumn":63},{"ruleId":"238","severity":1,"message":"239","line":11,"column":18,"nodeType":"240","messageId":"241","endLine":11,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":27,"column":21,"nodeType":"240","messageId":"241","endLine":27,"endColumn":23},{"ruleId":"226","severity":1,"message":"227","line":53,"column":1,"nodeType":"228","endLine":124,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":54,"column":5,"nodeType":"231","messageId":"232","endLine":122,"endColumn":6},{"ruleId":"226","severity":1,"message":"227","line":6,"column":1,"nodeType":"228","endLine":16,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":7,"column":5,"nodeType":"231","messageId":"232","endLine":14,"endColumn":6},{"ruleId":"238","severity":1,"message":"239","line":110,"column":79,"nodeType":"240","messageId":"241","endLine":110,"endColumn":81},{"ruleId":"238","severity":1,"message":"239","line":114,"column":79,"nodeType":"240","messageId":"241","endLine":114,"endColumn":81},{"ruleId":"238","severity":1,"message":"239","line":122,"column":18,"nodeType":"240","messageId":"241","endLine":122,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":123,"column":80,"nodeType":"240","messageId":"241","endLine":123,"endColumn":82},{"ruleId":"238","severity":1,"message":"239","line":126,"column":25,"nodeType":"240","messageId":"241","endLine":126,"endColumn":27},{"ruleId":"238","severity":1,"message":"239","line":127,"column":84,"nodeType":"240","messageId":"241","endLine":127,"endColumn":86},{"ruleId":"213","severity":1,"message":"242","line":157,"column":15,"nodeType":"215","messageId":"216","endLine":157,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":81,"column":24,"nodeType":"240","messageId":"241","endLine":81,"endColumn":26},{"ruleId":"213","severity":1,"message":"243","line":5,"column":15,"nodeType":"215","messageId":"216","endLine":5,"endColumn":18},{"ruleId":"213","severity":1,"message":"244","line":3,"column":5,"nodeType":"215","messageId":"216","endLine":3,"endColumn":25},{"ruleId":"213","severity":1,"message":"245","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":16},{"ruleId":"213","severity":1,"message":"246","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":18},{"ruleId":"238","severity":1,"message":"239","line":44,"column":69,"nodeType":"240","messageId":"241","endLine":44,"endColumn":71},{"ruleId":"226","severity":1,"message":"227","line":8,"column":1,"nodeType":"228","endLine":31,"endColumn":2},{"ruleId":"229","severity":1,"message":"230","line":9,"column":5,"nodeType":"231","messageId":"232","endLine":29,"endColumn":6},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["249"],"no-unused-vars","'Jumbotron' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","'Container' is defined but never used.","'NavLink' is defined but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","'serError' is assigned a value but never used.","'useReducer' is defined but never used.","'setError' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'authContants' is defined but never used.","'payload' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'idsArray' is assigned a value but never used.","'res' is assigned a value but never used.","'initialDataConstants' is defined but never used.","'Button' is defined but never used.","'IoIosAdd' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"252","text":"253"},[857,876],"[auth.authenticate, dispatch]"]