{"ast":null,"code":"import { categoryContants } from \"../actions/constants\";\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategory = (id, categories, category) => {\n  let myCategories = [];\n\n  for (let cat of categories) {\n    if (cat.parentId && cat.parentId == id) {}\n\n    myCategories.push({ ...cat,\n      children: cat.children && cat.children.length > 0 ? buildNewCategory(cat.children, category) : []\n    });\n  }\n\n  return myCategories;\n};\n\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case categoryContants.GET_ALL_CATEGORIES_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryContants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryContants.ADD_NEW_CATEGORY_SUCCESS:\n      const updatedCategories = buildNewCategory(state.categories, action.payload.category);\n      console.log(updatedCategories);\n      state = { ...state,\n        loading: false\n      };\n      break;\n\n    case categoryContants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["D:/Course IT/OnlineShop-MERN/admin-app/src/reducers/category.reducer.js"],"names":["categoryContants","initState","categories","loading","error","buildNewCategory","id","category","myCategories","cat","parentId","push","children","length","state","action","type","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_NEW_CATEGORY_FAILURE"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE,EADE;AAEdC,EAAAA,OAAO,EAAE,KAFK;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;;AAKA,MAAMC,gBAAgB,GAAG,CAACC,EAAD,EAAIJ,UAAJ,EAAgBK,QAAhB,KAA6B;AAClD,MAAIC,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,GAAT,IAAgBP,UAAhB,EAA4B;AAExB,QAAGO,GAAG,CAACC,QAAJ,IAAcD,GAAG,CAACC,QAAJ,IAAcJ,EAA/B,EAAkC,CAEjC;;AACDE,IAAAA,YAAY,CAACG,IAAb,CAAkB,EACd,GAAGF,GADW;AAEdG,MAAAA,QAAQ,EAAEH,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACG,QAAJ,CAAaC,MAAb,GAAsB,CAAtC,GAA0CR,gBAAgB,CAACI,GAAG,CAACG,QAAL,EAAeL,QAAf,CAA1D,GAAmF;AAF/E,KAAlB;AAIH;;AACD,SAAOC,YAAP;AAEH,CAdD;;AAeA,gBAAe,CAACM,KAAK,GAAGb,SAAT,EAAoBc,MAApB,KAA+B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,gBAAgB,CAACiB,0BAAtB;AACIH,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJZ,QAAAA,UAAU,EAAEa,MAAM,CAACG,OAAP,CAAehB;AAFvB,OAAR;AAIA;;AACJ,SAAKF,gBAAgB,CAACmB,wBAAtB;AACIL,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAEJX,QAAAA,OAAO,EAAE;AAFL,OAAR;AAIA;;AACJ,SAAKH,gBAAgB,CAACoB,wBAAtB;AACI,YAAMC,iBAAiB,GAAChB,gBAAgB,CAACS,KAAK,CAACZ,UAAP,EAAmBa,MAAM,CAACG,OAAP,CAAeX,QAAlC,CAAxC;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AACAP,MAAAA,KAAK,GAAG,EACJ,GAAGA,KADC;AAGJX,QAAAA,OAAO,EAAE;AAHL,OAAR;AAKA;;AACJ,SAAKH,gBAAgB,CAACwB,wBAAtB;AACIV,MAAAA,KAAK,GAAG,EACJ,GAAGb;AADC,OAAR;AAGA;AA1BR;;AA4BA,SAAOa,KAAP;AACH,CA9BD","sourcesContent":["import { categoryContants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\nconst buildNewCategory = (id,categories, category) => {\r\n    let myCategories = [];\r\n    for (let cat of categories) {\r\n        \r\n        if(cat.parentId&&cat.parentId==id){\r\n            \r\n        }\r\n        myCategories.push({\r\n            ...cat,\r\n            children: cat.children && cat.children.length > 0 ? buildNewCategory(cat.children, category):[]\r\n        });\r\n    }\r\n    return myCategories;\r\n\r\n}\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case categoryContants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_SUCCESS:\r\n            const updatedCategories=buildNewCategory(state.categories, action.payload.category);\r\n            console.log(updatedCategories);\r\n            state = {\r\n                ...state,\r\n               \r\n                loading: false,\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_FAILURE:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}