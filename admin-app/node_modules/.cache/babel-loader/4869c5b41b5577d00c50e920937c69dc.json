{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { categoryContants } from \"./constants\";\nexport const getAllCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: categoryContants.GET_ALL_CATEGORIES_REQUEST\n    });\n    const res = await axios.get(`category/getcategory`);\n    console.log(res);\n\n    if (res.status === 200) {\n      const {\n        categoryList\n      } = res.data;\n      dispatch({\n        type: categoryContants.GET_ALL_CATEGORIES_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryContants.GET_ALL_CATEGORIES_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryContants.ADD_NEW_CATEGORY_REQUEST\n    });\n\n    try {\n      const res = await axios.post(`/category/create`, form);\n\n      if (res.status === 201) {\n        dispatch({\n          type: categoryContants.ADD_NEW_CATEGORY_SUCCESS,\n          payload: {\n            category: res.data.category\n          }\n        });\n      } else {\n        dispatch({\n          type: categoryContants.ADD_NEW_CATEGORY_FAILURE,\n          payload: res.data.error\n        });\n      }\n    } catch (error) {// console.log(error.response);\n    }\n  };\n};\nexport const updateCategories = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryContants.UPDATE_CATEGORIES_REQUEST\n    });\n    const res = await axios.post(`/category/update`, form);\n\n    if (res.status === 201) {\n      return true;\n    } else {\n      console.log(res);\n    }\n  };\n};\nexport const deleteCategories = ids => {\n  return async dispatch => {\n    //dispatch({ type: categoryContants.DELETE_CATEGORIES_REQUEST });\n    const res = await axios.post(`/category/delete`, {\n      payload: {\n        ids\n      }\n    });\n\n    if (res.status == 201) {\n      // dispatch(getAllCategory());\n      // dispatch({ type: categoryContants.DELETE_CATEGORIES_SUCCESS });\n      return true;\n    } else {\n      // const { error } = res.data;\n      // dispatch({\n      //     type: categoryContants.DELETE_CATEGORIES_FAILURE,\n      //     payload: { error }\n      // });\n      return false;\n    }\n  };\n};","map":{"version":3,"sources":["D:/Course IT/OnlineShop-MERN/admin-app/src/actions/category.action.js"],"names":["axios","categoryContants","getAllCategory","dispatch","type","GET_ALL_CATEGORIES_REQUEST","res","get","console","log","status","categoryList","data","GET_ALL_CATEGORIES_SUCCESS","payload","categories","GET_ALL_CATEGORIES_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","category","ADD_NEW_CATEGORY_FAILURE","updateCategories","UPDATE_CATEGORIES_REQUEST","deleteCategories","ids"],"mappings":"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","sourcesContent":["import axios from \"../helpers/axios\"\r\nimport { categoryContants } from \"./constants\";\r\n\r\nexport const getAllCategory = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({\r\n            type: categoryContants.GET_ALL_CATEGORIES_REQUEST,\r\n        });\r\n        const res = await axios.get(`category/getcategory`);\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n            const { categoryList } = res.data;\r\n            dispatch({\r\n                type: categoryContants.GET_ALL_CATEGORIES_SUCCESS,\r\n                payload: { categories: categoryList }\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: categoryContants.GET_ALL_CATEGORIES_FAILURE,\r\n                payload: { error: res.data.error }\r\n\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const addCategory = (form) => {\r\n    return async dispatch => {\r\n        dispatch({ type: categoryContants.ADD_NEW_CATEGORY_REQUEST });\r\n        try {\r\n            const res = await axios.post(`/category/create`, form);\r\n            if (res.status === 201) {\r\n                dispatch({\r\n                    type: categoryContants.ADD_NEW_CATEGORY_SUCCESS,\r\n                    payload: { category: res.data.category }\r\n                });\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: categoryContants.ADD_NEW_CATEGORY_FAILURE,\r\n                    payload: res.data.error\r\n                });\r\n            }\r\n        } catch (error) {\r\n\r\n           // console.log(error.response);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateCategories = (form) => {\r\n    return async dispatch => {\r\n        dispatch({type: categoryContants.UPDATE_CATEGORIES_REQUEST});\r\n\r\n        const res = await axios.post(`/category/update`, form);\r\n        if (res.status === 201) {\r\n            return true;\r\n        }\r\n        else {\r\n            console.log(res);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCategories = (ids) => {\r\n    return async dispatch => {\r\n        //dispatch({ type: categoryContants.DELETE_CATEGORIES_REQUEST });\r\n        const res = await axios.post(`/category/delete`, {\r\n            payload: {\r\n                ids\r\n            }\r\n        });\r\n        if (res.status == 201) {\r\n            // dispatch(getAllCategory());\r\n            // dispatch({ type: categoryContants.DELETE_CATEGORIES_SUCCESS });\r\n            return true;\r\n        } else {\r\n            // const { error } = res.data;\r\n            // dispatch({\r\n            //     type: categoryContants.DELETE_CATEGORIES_FAILURE,\r\n            //     payload: { error }\r\n            // });\r\n            return false;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}