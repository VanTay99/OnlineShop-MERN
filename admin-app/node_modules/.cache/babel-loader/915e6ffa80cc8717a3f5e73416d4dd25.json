{"ast":null,"code":"var _jsxFileName = \"D:\\\\Course IT\\\\OnlineShop-MERN\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Row, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory } from '../../actions';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoCheckboxOutline, IoCheckbox } from 'react-icons/io5';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n/**\r\n* @author\r\n* @function Category\r\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId(''); // const cat={\n    //     categoryName,\n    //     parentCategoryId,\n    //     categoryImage\n    // };\n    // console.log(cat);\n\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let Mycategories = [];\n\n    for (let category of categories) {\n      Mycategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return Mycategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: 'Add new Category',\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"/1csvvblAgrKPmRCfh7rWB+CrJE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["D:/Course IT/OnlineShop-MERN/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Col","Container","Row","Button","useDispatch","useSelector","getAllCategory","addCategory","Layout","Input","Modal","CheckboxTree","IoCheckboxOutline","IoCheckbox","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","dispatch","handleClose","form","FormData","append","handleShow","renderCategories","categories","Mycategories","push","label","name","value","_id","children","length","createCategoryList","options","handleCategoryImage","e","target","files","display","justifyContent","map","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCategory, addCategory } from '../../actions';\r\nimport Layout from '../../components/Layout';\r\nimport Input from '../../components/UI/Input';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport { IoCheckboxOutline,IoCheckbox,} from 'react-icons/io5';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css'\r\n\r\n/**\r\n* @author\r\n* @function Category\r\n**/\r\n\r\nconst Category = (props) => {\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const[checked,setChecked]=useState([]);\r\n    const[expanded,setExpanded]=useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n\r\n        const form = new FormData();\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        // const cat={\r\n        //     categoryName,\r\n        //     parentCategoryId,\r\n        //     categoryImage\r\n        // };\r\n        // console.log(cat);\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n        let Mycategories = [];\r\n        for (let category of categories) {\r\n            Mycategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n\r\n            );\r\n        }\r\n        return Mycategories;\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({\r\n                value: category._id,\r\n                name: category.name\r\n            });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n\r\n    }\r\n\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Category</h3>\r\n                            <Button variant=\"primary\" onClick={handleShow}>Add</Button>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        {/* <ul>\r\n                            {renderCategories(category.categories)}\r\n\r\n                        </ul> */}\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked =>setChecked( checked )}\r\n                            onExpand={expanded => setExpanded( expanded )}\r\n                            \r\n                            />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Modal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                modalTitle={'Add new Category'}\r\n            >\r\n                <Input\r\n                    value={categoryName}\r\n                    placeholder={`Category Name`}\r\n                    onChange={(e) => setCategoryName(e.target.value)}\r\n\r\n                />\r\n                <br />\r\n                <select className=\"form-control\" value={parentCategoryId} onChange={(e) => setParentCategoryId(e.target.value)}>\r\n                    <option>select Category</option>\r\n                    {\r\n                        createCategoryList(category.categories).map(option =>\r\n                            <option key={option.value} value={option.value}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n                <br />\r\n                <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\r\n\r\n            </Modal>\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}