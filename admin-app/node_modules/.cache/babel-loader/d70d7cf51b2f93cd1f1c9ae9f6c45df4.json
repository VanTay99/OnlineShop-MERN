{"ast":null,"code":"var _jsxFileName = \"D:\\\\Course IT\\\\OnlineShop-MERN\\\\admin-app\\\\src\\\\containers\\\\NewPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"../../components/UI/Modal\";\nimport Layout from \"../../components/Layout\";\nimport { Button, Row, Col, Container } from \"react-bootstrap\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport Input from \"../../components/UI/Input\";\nimport linearCategories from \"../../helpers/linearCategories\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPage } from '../../actions';\n/**\r\n * @author\r\n * @function NewPage\r\n **/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NewPage = props => {\n  _s();\n\n  const [createModal, setCreateModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const category = useSelector(state => state.category);\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n  const [desc, setDesc] = useState('');\n  const [type, setType] = useState('');\n  const [banners, setBanners] = useState([]);\n  const [products, setProducts] = useState([]);\n  const dispatch = useDispatch();\n  const page = useSelector(state => state.page);\n  useEffect(() => {\n    setCategories(linearCategories(category.categories));\n  }, [category]);\n  useEffect(() => {\n    console.log(page);\n\n    if (!page.loading) {\n      setCreateModal(false);\n    }\n  }, [page]);\n\n  const onCategoryChange = e => {\n    const category = categories.find(category => category._id == e.target.value);\n    setCategoryId(e.target.value);\n    setType(category.type);\n  };\n\n  const handleProductImages = e => {\n    console.log(e);\n    setProducts([...products, e.target.files[0]]);\n  };\n\n  const handleBannerImages = e => {\n    console.log(e);\n    setBanners([...banners, e.target.files[0]]);\n  };\n\n  const submitPageForm = e => {\n    if (title === \"\") {\n      alert('Title is required');\n      setCreateModal(false);\n      return;\n    }\n\n    const form = new FormData();\n    form.append('title', title);\n    form.append('description', desc);\n    form.append('category', categoryId);\n    form.append('type', type);\n    banners.forEach((banner, index) => {\n      form.append('banners', banner);\n    });\n    products.forEach((product, index) => {\n      form.append('products', product);\n    });\n    dispatch(createPage(form));\n  };\n\n  const renderCreatePageModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: createModal,\n      modalTitle: 'Create New Page',\n      handleClose: submitPageForm //onSubmit={submitPageForm}\n      ,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control \",\n              value: categoryId,\n              onChange: onCategoryChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat._id,\n                children: cat.name\n              }, cat._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              placeholder: 'Page Title',\n              className: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: desc,\n              onChange: e => setDesc(e.target.value),\n              placeholder: 'Page Desc',\n              className: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), banners.length > 0 ? banners.map((banner, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: banner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"banners\",\n              onChange: handleBannerImages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), products.length > 0 ? products.map((product, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              className: \"form-control\",\n              type: \"file\",\n              name: \"products\",\n              onChange: handleProductImages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [\"page.loading ?\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Creating Page...please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this), \":\", /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderCreatePageModal(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCreateModal(true),\n        children: \"Create Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPage, \"YSIisJQOm+xOPSGH4BsPhQMymsQ=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = NewPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPage\");","map":{"version":3,"sources":["D:/Course IT/OnlineShop-MERN/admin-app/src/containers/NewPage/index.js"],"names":["React","useEffect","useState","Modal","Layout","Button","Row","Col","Container","IoIosAdd","Input","linearCategories","useDispatch","useSelector","createPage","NewPage","props","createModal","setCreateModal","title","setTitle","category","state","categories","setCategories","categoryId","setCategoryId","desc","setDesc","type","setType","banners","setBanners","products","setProducts","dispatch","page","console","log","loading","onCategoryChange","e","find","_id","target","value","handleProductImages","files","handleBannerImages","submitPageForm","alert","form","FormData","append","forEach","banner","index","product","renderCreatePageModal","map","cat","name","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Button, Row, Col, Container } from \"react-bootstrap\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport linearCategories from \"../../helpers/linearCategories\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {createPage} from '../../actions'\r\n/**\r\n * @author\r\n * @function NewPage\r\n **/\r\n\r\nexport const NewPage = (props) => {\r\n    const [createModal, setCreateModal] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const category = useSelector(state => state.category);\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [desc, setDesc] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [banners, setBanners] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n\r\n    useEffect(() => {\r\n        setCategories(linearCategories(category.categories));\r\n    }, [category]);\r\n\r\n    useEffect(()=>{\r\n        console.log(page);\r\n        if(!page.loading){\r\n            setCreateModal(false);\r\n        }\r\n    },[page]);\r\n    const onCategoryChange = (e) => {\r\n        const category = categories.find(category => category._id == e.target.value);\r\n        setCategoryId(e.target.value);\r\n        setType(category.type);\t\r\n    }\r\n\r\n    const handleProductImages = (e) => {\r\n        console.log(e);\r\n        setProducts([...products, e.target.files[0]]);\r\n    }\r\n    const handleBannerImages = (e) => {\r\n        console.log(e);\r\n        setBanners([...banners, e.target.files[0]]);\r\n    }\r\n    const submitPageForm = (e) => {\r\n\r\n        if (title === \"\") {\r\n            alert('Title is required');\r\n            setCreateModal(false);\r\n            return;\r\n        }\r\n\r\n        const form = new FormData();\r\n        form.append('title', title);\r\n        form.append('description', desc);\r\n        form.append('category', categoryId);\r\n        form.append('type', type);\r\n        banners.forEach((banner, index) => {\r\n            form.append('banners', banner);\r\n        });\r\n        products.forEach((product, index) => {\r\n            form.append('products', product);\r\n        });\r\n\r\n        dispatch(createPage(form));\r\n    }\r\n\r\n    const renderCreatePageModal = () => {\r\n        return (\r\n            <Modal\r\n                show={createModal}\r\n                modalTitle={'Create New Page'}\r\n                handleClose={submitPageForm}\r\n                //onSubmit={submitPageForm}\r\n            >\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <select className=\"form-control \"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                            >\r\n                                <option value=\"\">Select Category</option>\r\n                                {\r\n                                    categories.map(cat =>\r\n                                        <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                             {/* <Input \r\n                                type=\"select\"\r\n                                value={categoryId}\r\n                                onChange={onCategoryChange}\r\n                                options={categories}\r\n                                placeholder={'Select Category'}\r\n                            /> */}\r\n                        </Col>\r\n                    </Row>\r\n                    <br />\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={title}\r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                placeholder={'Page Title'}\r\n                                className=\"\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                value={desc}\r\n                                onChange={(e) => setDesc(e.target.value)}\r\n                                placeholder={'Page Desc'}\r\n                                className=\"\"\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    {\r\n                            banners.length > 0 ? \r\n                            banners.map((banner, index) => \r\n                                <Row key={index}>\r\n                                    <Col>{banner.name}</Col>\r\n                                </Row>\r\n                            ) : null\r\n                    }\r\n                    \r\n                    <Row>\r\n                        <Col>\r\n                            <Input\r\n                                className=\"form-control\" \r\n                                type=\"file\" \r\n                                name=\"banners\"\r\n                                onChange={handleBannerImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <br/>\r\n                    {\r\n                            products.length > 0 ? \r\n                            products.map((product, index) => \r\n                                <Row key={index}>\r\n                                    <Col>{product.name}</Col>\r\n                                </Row>\r\n                            ) : null\r\n                    }\r\n                   \r\n                    <Row>\r\n                        <Col>\r\n                            <Input \r\n                                className=\"form-control\"\r\n                                type=\"file\" \r\n                                name=\"products\"\r\n                                onChange={handleProductImages}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Layout sidebar>\r\n             page.loading ? \r\n                <p>Creating Page...please wait</p>\r\n                :\r\n                <>\r\n                    {renderCreatePageModal()}\r\n                    <button onClick={() => setCreateModal(true)}>Create Page</button>\r\n                </>\r\n        </Layout>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}