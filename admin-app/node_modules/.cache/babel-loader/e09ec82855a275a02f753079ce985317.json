{"ast":null,"code":"var _jsxFileName = \"D:\\\\Course IT\\\\OnlineShop-MERN\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Row, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory, updateCategories } from '../../actions';\nimport Layout from '../../components/Layout';\nimport Input from '../../components/UI/Input';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\n/**\r\n* @author\r\n* @function Category\r\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdatecategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let Mycategories = [];\n\n    for (let category of categories) {\n      Mycategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return Mycategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    setUpdatecategoryModal(true);\n    console.log({\n      checked,\n      expanded,\n      categories,\n      checkedArray,\n      expandedArray\n    });\n  };\n\n  const updateCheckAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == \"checked\") {\n      const updatedCheckArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckArray);\n    } else if (type == \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    dispatch(updateCategories(form)).then(result => {\n      if (result) {\n        dispatch(getAllCategory());\n      }\n    });\n    setUpdatecategoryModal(false);\n  };\n\n  const renderUpdateCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: updateCategoryModal,\n      handleClose: updateCategoriesForm,\n      modalTitle: 'Update Categories',\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Expanded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), expandedArray.length > 0 && expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: `Category Name`,\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'expanded')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'expanded'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Checked Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: `Category Name`,\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'checked')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'checked'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderAddCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: 'Add new Category',\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this);\n  };\n\n  const deleteCategory = () => {\n    setDeleteCategoryModal(true);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    console.log('delete', checkedArray);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onclick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'yes',\n        color: 'danger',\n        onclick: () => {\n          alert('yes');\n        }\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Expanded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleShow,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 40\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 42\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 44\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 46\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 45\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: deleteCategory,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            onClick: updateCategory,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, this), renderAddCategoryModal(), renderUpdateCategoryModal(), renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"WKEpTrMbQwuUKXbyPA6pjRfilII=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["D:/Course IT/OnlineShop-MERN/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Col","Container","Row","Button","useDispatch","useSelector","getAllCategory","addCategory","updateCategories","Layout","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdatecategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","handleClose","form","FormData","append","handleShow","renderCategories","categories","Mycategories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","handleCategoryImage","e","target","files","updateCategory","console","log","updateCheckAndExpandedCategories","forEach","categoryId","index","find","_index","handleCategoryInput","key","type","updatedCheckArray","map","item","updatedExpandedArray","updateCategoriesForm","then","result","renderUpdateCategoryModal","option","renderAddCategoryModal","deleteCategory","renderDeleteCategoryModal","color","onclick","alert","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllCategory, addCategory, updateCategories } from '../../actions';\r\nimport Layout from '../../components/Layout';\r\nimport Input from '../../components/UI/Input';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport {\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown\r\n} from \"react-icons/io\";\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css'\r\n\r\n/**\r\n* @author\r\n* @function Category\r\n**/\r\n\r\nconst Category = (props) => {\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdatecategoryModal] = useState(false);\r\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => {\r\n\r\n        const form = new FormData();\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n        let Mycategories = [];\r\n        for (let category of categories) {\r\n            Mycategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n\r\n            );\r\n        }\r\n        return Mycategories;\r\n    }\r\n\r\n    const createCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({\r\n                value: category._id,\r\n                name: category.name,\r\n                parentId: category.parentId\r\n            });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n\r\n    }\r\n    const updateCategory = () => {\r\n        \r\n        setUpdatecategoryModal(true);\r\n       \r\n        console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n    }\r\n\r\n    const updateCheckAndExpandedCategories = () => {\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && checkedArray.push(category);\r\n        })\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n\r\n    }\r\n\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckArray = checkedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckArray);\r\n\r\n        } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n\r\n    }\r\n    const updateCategoriesForm = () => {\r\n        const form = new FormData();\r\n        expandedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        })\r\n        checkedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        })\r\n        dispatch(updateCategories(form))\r\n            .then(result => {\r\n                if (result) {\r\n                    dispatch(getAllCategory())\r\n                }\r\n            })\r\n\r\n        setUpdatecategoryModal(false);\r\n    }\r\n    const renderUpdateCategoryModal = () => {\r\n        return (\r\n            <Modal\r\n                show={updateCategoryModal}\r\n                handleClose={updateCategoriesForm}\r\n                modalTitle={'Update Categories'}\r\n                size='lg'\r\n            >\r\n                <Row>\r\n                    <Col>\r\n                        <h6>Expanded</h6>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                {\r\n                    expandedArray.length > 0 &&\r\n                    expandedArray.map((item, index) =>\r\n                        <Row key={index}>\r\n                            <Col>\r\n                                <Input\r\n                                    value={item.name}\r\n                                    placeholder={`Category Name`}\r\n                                    onChange={(e) => handleCategoryInput('name', e.target.value, index, 'expanded')}\r\n                                />\r\n                            </Col>\r\n                            <br />\r\n                            <Col>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    value={item.parentId}\r\n                                    onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'expanded')}>\r\n                                    <option>select Category</option>\r\n                                    {\r\n                                        createCategoryList(category.categories).map(option =>\r\n                                            <option key={option.value} value={option.value}>{option.name}</option>)\r\n                                    }\r\n                                </select>\r\n                            </Col>\r\n                            <br />\r\n                            <Col>\r\n                                <select className=\"form-control\">\r\n                                    <option value=\"\">Select Type</option>\r\n                                    <option value=\"store\">Store</option>\r\n                                    <option value=\"product\">Product</option>\r\n                                    <option value=\"page\">page</option>\r\n                                </select>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                    )\r\n\r\n                }\r\n                <br />\r\n                <h6>Checked Categories</h6>\r\n                {\r\n                    checkedArray.length > 0 &&\r\n                    checkedArray.map((item, index) =>\r\n                        <Row key={index}>\r\n                            <Col>\r\n                                <Input\r\n                                    value={item.name}\r\n                                    placeholder={`Category Name`}\r\n                                    onChange={(e) => handleCategoryInput('name', e.target.value, index, 'checked')}\r\n                                />\r\n                            </Col>\r\n                            <br />\r\n                            <Col>\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    value={item.parentId}\r\n                                    onChange={(e) => handleCategoryInput('parentId', e.target.value, index, 'checked')}>\r\n                                    <option>select Category</option>\r\n                                    {\r\n                                        createCategoryList(category.categories).map(option =>\r\n                                            <option key={option.value} value={option.value}>{option.name}</option>)\r\n                                    }\r\n                                </select>\r\n                            </Col>\r\n                            <br />\r\n                            <Col>\r\n                                <select className=\"form-control\">\r\n                                    <option value=\"\">Select Type</option>\r\n                                    <option value=\"store\">Store</option>\r\n                                    <option value=\"product\">Product</option>\r\n                                    <option value=\"page\">page</option>\r\n                                </select>\r\n                            </Col>\r\n                            <br />\r\n                        </Row>\r\n                    )\r\n                }\r\n\r\n\r\n                {/* <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} /> */}\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    const renderAddCategoryModal = () => {\r\n        return (\r\n            <Modal\r\n                show={show}\r\n                handleClose={handleClose}\r\n                modalTitle={'Add new Category'}\r\n            >\r\n                <Input\r\n                    value={categoryName}\r\n                    placeholder={`Category Name`}\r\n                    onChange={(e) => setCategoryName(e.target.value)}\r\n\r\n                />\r\n                <br />\r\n                <select className=\"form-control\" value={parentCategoryId} onChange={(e) => setParentCategoryId(e.target.value)}>\r\n                    <option>select Category</option>\r\n                    {\r\n                        createCategoryList(category.categories).map(option =>\r\n                            <option key={option.value} value={option.value}>{option.name}</option>)\r\n                    }\r\n                </select>\r\n                <br />\r\n                <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\r\n\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    const deleteCategory = () => {\r\n        setDeleteCategoryModal(true);\r\n    }\r\n\r\n    const renderDeleteCategoryModal = () => {\r\n        console.log('delete', checkedArray);\r\n        return (\r\n            <Modal\r\n                modalTitle=\"Confirm\"\r\n                show={deleteCategoryModal}\r\n                handleClose={() => setDeleteCategoryModal(false)}\r\n                buttons={[\r\n                    {\r\n                        label: 'No',\r\n                        color: 'primary',\r\n                        onclick: () => {\r\n                            alert('no');\r\n                        }\r\n                    },\r\n                    {\r\n                        label: 'yes',\r\n                        color: 'danger',\r\n                        onclick: () => {\r\n                            alert('yes');\r\n                        }\r\n                    }\r\n                ]}\r\n            >\r\n                <h6>Expanded</h6>\r\n            </Modal>\r\n        );\r\n    }\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Category</h3>\r\n                            <Button variant=\"primary\" onClick={handleShow}>Add</Button>\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        {/* <ul>\r\n                            {renderCategories(category.categories)}\r\n\r\n                        </ul> */}\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoIosCheckbox />,\r\n                                uncheck: <IoIosCheckboxOutline />,\r\n                                halfCheck: <IoIosCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />,\r\n                            }}\r\n\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Button variant=\"danger\" onClick={deleteCategory}>delete</Button>\r\n                        <Button variant=\"info\" onClick={updateCategory}>Edit</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            {renderAddCategoryModal()}\r\n            {renderUpdateCategoryModal()}\r\n            {renderDeleteCategoryModal()}\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}