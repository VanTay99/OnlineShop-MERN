{"ast":null,"code":"import { categoryContants } from \"../actions/constants\";\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\n\nconst buildNewCategory = (categories, category) => {\n  let myCategories = [];\n\n  for (let cat of categories) {}\n};\n\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case categoryContants.GET_ALL_CATEGORIES_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryContants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryContants.ADD_NEW_CATEGORY_SUCCESS:\n      state = { ...state,\n        categories: buildNewCategory(state.categories, action.payload.category),\n        loading: false\n      };\n      break;\n\n    case categoryContants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["D:/Course IT/OnlineShop-MERN/admin-app/src/reducers/category.reducer.js"],"names":["categoryContants","initState","categories","loading","error","buildNewCategory","category","myCategories","cat","state","action","type","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","ADD_NEW_CATEGORY_FAILURE"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AAEA,MAAMC,SAAS,GAAC;AACZC,EAAAA,UAAU,EAAC,EADC;AAEZC,EAAAA,OAAO,EAAE,KAFG;AAGZC,EAAAA,KAAK,EAAC;AAHM,CAAhB;;AAKA,MAAMC,gBAAgB,GAAC,CAACH,UAAD,EAAYI,QAAZ,KAAuB;AAC1C,MAAIC,YAAY,GAAC,EAAjB;;AACA,OAAI,IAAIC,GAAR,IAAeN,UAAf,EAA0B,CAEzB;AAEJ,CAND;;AAOA,gBAAe,CAACO,KAAK,GAACR,SAAP,EAAiBS,MAAjB,KAA0B;AACrC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKX,gBAAgB,CAACY,0BAAtB;AACIH,MAAAA,KAAK,GAAC,EACF,GAAGA,KADD;AAEFP,QAAAA,UAAU,EAACQ,MAAM,CAACG,OAAP,CAAeX;AAFxB,OAAN;AAIA;;AACJ,SAAKF,gBAAgB,CAACc,wBAAtB;AACIL,MAAAA,KAAK,GAAC,EACF,GAAGA,KADD;AAEFN,QAAAA,OAAO,EAAC;AAFN,OAAN;AAIA;;AACJ,SAAKH,gBAAgB,CAACe,wBAAtB;AACIN,MAAAA,KAAK,GAAC,EACF,GAAGA,KADD;AAEFP,QAAAA,UAAU,EAACG,gBAAgB,CAACI,KAAK,CAACP,UAAP,EAAkBQ,MAAM,CAACG,OAAP,CAAeP,QAAjC,CAFzB;AAGFH,QAAAA,OAAO,EAAC;AAHN,OAAN;AAKA;;AACJ,SAAKH,gBAAgB,CAACgB,wBAAtB;AACIP,MAAAA,KAAK,GAAC,EACF,GAAGR;AADD,OAAN;AAGA;AAxBR;;AA0BA,SAAOQ,KAAP;AACH,CA5BD","sourcesContent":["import { categoryContants } from \"../actions/constants\";\r\n\r\nconst initState={\r\n    categories:[],\r\n    loading :false,\r\n    error:null\r\n};\r\nconst buildNewCategory=(categories,category)=>{\r\n    let myCategories=[];\r\n    for(let cat of categories){\r\n        \r\n    }\r\n\r\n}\r\nexport default (state=initState,action)=>{\r\n    switch(action.type){\r\n        case categoryContants.GET_ALL_CATEGORIES_SUCCESS:\r\n            state={\r\n                ...state,\r\n                categories:action.payload.categories\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_REQUEST:\r\n            state={\r\n                ...state,\r\n                loading:true\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_SUCCESS:\r\n            state={\r\n                ...state,\r\n                categories:buildNewCategory(state.categories,action.payload.category),\r\n                loading:false,\r\n            }\r\n            break;\r\n        case categoryContants.ADD_NEW_CATEGORY_FAILURE:\r\n            state={\r\n                ...initState\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}