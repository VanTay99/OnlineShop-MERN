{"ast":null,"code":"var _jsxFileName = \"D:\\\\Course IT\\\\OnlineShop-MERN\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Row, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory, addCategory, updateCategories, deleteCategories as deleteCategoriesAction } from '../../actions';\nimport Layout from '../../components/Layout';\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from 'react-checkbox-tree';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAdd, IoIosTrash, IoIosCloudUpload } from \"react-icons/io\";\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\nimport AddCategoryModal from './components/AddCategoryModal';\nimport './style.css';\n/**\r\n* @author\r\n* @function Category\r\n**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Category = props => {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdatecategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {}, [category.loading]);\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (name === \"\") {\n      alert('Category name is required ');\n      return;\n    }\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let Mycategories = [];\n\n    for (let category of categories) {\n      Mycategories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && renderCategories(category.children)\n      });\n    }\n\n    return Mycategories;\n  };\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckAndExpandedCategories();\n    setUpdatecategoryModal(true);\n  };\n\n  const updateCheckAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == \"checked\") {\n      const updatedCheckArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckArray);\n    } else if (type == \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : \"\");\n      form.append('type', item.type);\n    });\n    dispatch(updateCategories(form));\n    setUpdatecategoryModal(false);\n  };\n\n  const deleteCategory = () => {\n    updateCheckAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const deleteCategories = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n\n    setDeleteCategoryModal(false);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    console.log('delete', checkedArray);\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'yes',\n        color: 'danger',\n        onClick: deleteCategories\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Expanded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 53\n      }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 52\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this);\n  };\n\n  const categoryList = createCategoryList(category.categories);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actionBtnContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Actions : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: handleShow,\n                children: [/*#__PURE__*/_jsxDEV(IoIosAdd, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 80\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 92\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: deleteCategory,\n                children: [/*#__PURE__*/_jsxDEV(IoIosTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 83\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 97\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"info\",\n                onClick: updateCategory,\n                children: [/*#__PURE__*/_jsxDEV(IoIosCloudUpload, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 81\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 101\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 40\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 42\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 44\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 46\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 45\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n      show: show,\n      handleClose: () => setShow(false),\n      onSubmit: handleClose,\n      modalTitle: 'Add New Category',\n      size: \"lg\",\n      categoryName: categoryName,\n      setCategoryName: setCategoryName,\n      parentCategoryId: parentCategoryId,\n      setParentCategoryId: setParentCategoryId,\n      categoryList: categoryList,\n      handleCategoryImage: handleCategoryImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UpdateCategoriesModal, {\n      show: updateCategoryModal,\n      handleClose: updateCategoriesForm,\n      modalTitle: 'Update Categories',\n      size: \"lg\",\n      expandedArray: expandedArray,\n      checkedArray: checkedArray,\n      handleCategoryInput: handleCategoryInput,\n      categoryList: categoryList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Category, \"D6AuA8y4/NAYeqgunA/Q9yQeyN4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["D:/Course IT/OnlineShop-MERN/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Col","Container","Row","Button","useDispatch","useSelector","getAllCategory","addCategory","updateCategories","deleteCategories","deleteCategoriesAction","Layout","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosAdd","IoIosTrash","IoIosCloudUpload","UpdateCategoriesModal","AddCategoryModal","Category","props","category","state","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdatecategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","loading","handleClose","form","FormData","name","alert","append","handleShow","renderCategories","categories","Mycategories","push","label","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckAndExpandedCategories","forEach","categoryId","index","find","_index","handleCategoryInput","key","updatedCheckArray","map","item","updatedExpandedArray","updateCategoriesForm","deleteCategory","checkedIdsArray","expandedIdsArray","idsArray","concat","then","result","renderDeleteCategoryModal","console","log","color","onClick","categoryList","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    getAllCategory,\r\n    addCategory,\r\n    updateCategories,\r\n    deleteCategories as deleteCategoriesAction\r\n} from '../../actions';\r\nimport Layout from '../../components/Layout';\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport {\r\n    IoIosCheckboxOutline,\r\n    IoIosCheckbox,\r\n    IoIosArrowForward,\r\n    IoIosArrowDown,\r\n    IoIosAdd,\r\n    IoIosTrash,\r\n    IoIosCloudUpload\r\n} from \"react-icons/io\";\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css'\r\nimport UpdateCategoriesModal from './components/UpdateCategoriesModal';\r\nimport AddCategoryModal from './components/AddCategoryModal';\r\nimport './style.css';\r\n/**\r\n* @author\r\n* @function Category\r\n**/\r\n\r\nconst Category = (props) => {\r\n    const category = useSelector(state => state.category);\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [parentCategoryId, setParentCategoryId] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const [show, setShow] = useState(false);\r\n    const [checked, setChecked] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [checkedArray, setCheckedArray] = useState([]);\r\n    const [expandedArray, setExpandedArray] = useState([]);\r\n    const [updateCategoryModal, setUpdatecategoryModal] = useState(false);\r\n    const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n\r\n    },[category.loading]);\r\n    const handleClose = () => {\r\n\r\n        const form = new FormData();\r\n        if(name===\"\"){\r\n            alert('Category name is required ')\r\n            return;\r\n        }\r\n        form.append('name', categoryName);\r\n        form.append('parentId', parentCategoryId);\r\n        form.append('categoryImage', categoryImage);\r\n        dispatch(addCategory(form));\r\n        setCategoryName('');\r\n        setParentCategoryId('');\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n    const renderCategories = (categories) => {\r\n        let Mycategories = [];\r\n        for (let category of categories) {\r\n            Mycategories.push(\r\n                {\r\n                    label: category.name,\r\n                    value: category._id,\r\n                    children: category.children.length > 0 && renderCategories(category.children)\r\n                }\r\n\r\n            );\r\n        }\r\n        return Mycategories;\r\n    }\r\n    const createCategoryList = (categories, options = []) => {\r\n        for (let category of categories) {\r\n            options.push({\r\n                value: category._id,\r\n                name: category.name,\r\n                parentId: category.parentId,\r\n                type:category.type\r\n            });\r\n            if (category.children.length > 0) {\r\n                createCategoryList(category.children, options)\r\n            }\r\n        }\r\n        return options;\r\n    }\r\n    const handleCategoryImage = (e) => {\r\n        setCategoryImage(e.target.files[0]);\r\n\r\n    }\r\n    const updateCategory = () => {\r\n        updateCheckAndExpandedCategories();\r\n        setUpdatecategoryModal(true);\r\n    }\r\n    const updateCheckAndExpandedCategories = () => {\r\n        const categories = createCategoryList(category.categories);\r\n        const checkedArray = [];\r\n        const expandedArray = [];\r\n        checked.length > 0 && checked.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && checkedArray.push(category);\r\n        })\r\n        expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n            const category = categories.find((category, _index) => categoryId == category.value);\r\n            category && expandedArray.push(category);\r\n        })\r\n        setCheckedArray(checkedArray);\r\n        setExpandedArray(expandedArray);\r\n\r\n    }\r\n    const handleCategoryInput = (key, value, index, type) => {\r\n        if (type == \"checked\") {\r\n            const updatedCheckArray = checkedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\r\n            setCheckedArray(updatedCheckArray);\r\n\r\n        } else if (type == \"expanded\") {\r\n            const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item, [key]: value } : item);\r\n            setExpandedArray(updatedExpandedArray);\r\n        }\r\n\r\n    }\r\n    const updateCategoriesForm = () => {\r\n        const form = new FormData();\r\n        expandedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        })\r\n        checkedArray.forEach((item, index) => {\r\n            form.append('_id', item.value);\r\n            form.append('name', item.name);\r\n            form.append('parentId', item.parentId ? item.parentId : \"\");\r\n            form.append('type', item.type);\r\n        })\r\n        dispatch(updateCategories(form));\r\n        setUpdatecategoryModal(false);\r\n    }\r\n\r\n    const deleteCategory = () => {\r\n        updateCheckAndExpandedCategories();\r\n        setDeleteCategoryModal(true);\r\n    }\r\n    const deleteCategories = () => {\r\n        const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\r\n        const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\r\n        const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n        if (checkedIdsArray.length > 0) {\r\n            dispatch(deleteCategoriesAction(checkedIdsArray))\r\n                .then(result => {\r\n                    if (result) {\r\n                        dispatch(getAllCategory())\r\n                        setDeleteCategoryModal(false)\r\n                    }\r\n                })\r\n        }\r\n        setDeleteCategoryModal(false);\r\n\r\n    }\r\n    const renderDeleteCategoryModal = () => {\r\n        console.log('delete', checkedArray);\r\n        return (\r\n            <Modal\r\n                modalTitle=\"Confirm\"\r\n                show={deleteCategoryModal}\r\n                handleClose={() => setDeleteCategoryModal(false)}\r\n                buttons={[\r\n                    {\r\n                        label: 'No',\r\n                        color: 'primary',\r\n                        onClick: () => {\r\n                            alert('no');\r\n                        }\r\n\r\n                    },\r\n                    {\r\n                        label: 'yes',\r\n                        color: 'danger',\r\n                        onClick: deleteCategories\r\n\r\n                    }\r\n                ]}\r\n            >\r\n                <h5>Expanded</h5>\r\n                {expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n                <h5>Checked</h5>\r\n                {checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\r\n            </Modal>\r\n        );\r\n    }\r\n    const categoryList = createCategoryList(category.categories);\r\n    return (\r\n        <Layout sidebar>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <h3>Category</h3>\r\n                            <div className=\"actionBtnContainer\">\r\n                                <span> Actions : </span>\r\n                                <Button variant=\"primary\" onClick={handleShow}><IoIosAdd /><span>Add</span></Button>\r\n                                <Button variant=\"danger\" onClick={deleteCategory}><IoIosTrash /><span>Delete</span></Button>\r\n                                <Button variant=\"info\" onClick={updateCategory}><IoIosCloudUpload /><span>Edit</span></Button>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        {/* <ul>\r\n                            {renderCategories(category.categories)}\r\n\r\n                        </ul> */}\r\n                        <CheckboxTree\r\n                            nodes={renderCategories(category.categories)}\r\n                            checked={checked}\r\n                            expanded={expanded}\r\n                            onCheck={checked => setChecked(checked)}\r\n                            onExpand={expanded => setExpanded(expanded)}\r\n                            icons={{\r\n                                check: <IoIosCheckbox />,\r\n                                uncheck: <IoIosCheckboxOutline />,\r\n                                halfCheck: <IoIosCheckboxOutline />,\r\n                                expandClose: <IoIosArrowForward />,\r\n                                expandOpen: <IoIosArrowDown />,\r\n                            }}\r\n\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n            <AddCategoryModal\r\n                show={show}\r\n                handleClose={()=>setShow(false)}\r\n                onSubmit={handleClose}\r\n                modalTitle={'Add New Category'}\r\n                size='lg'\r\n                categoryName={categoryName}\r\n                setCategoryName={setCategoryName}\r\n                parentCategoryId={parentCategoryId}\r\n                setParentCategoryId={setParentCategoryId}\r\n                categoryList={categoryList}\r\n                handleCategoryImage={handleCategoryImage}\r\n            />\r\n            <UpdateCategoriesModal\r\n                show={updateCategoryModal}\r\n                handleClose={updateCategoriesForm}\r\n                modalTitle={'Update Categories'}\r\n                size='lg'\r\n                expandedArray={expandedArray}\r\n                checkedArray={checkedArray}\r\n                handleCategoryInput={handleCategoryInput}\r\n                categoryList={categoryList}\r\n            />\r\n            {renderDeleteCategoryModal()}\r\n        </Layout>\r\n    )\r\n\r\n}\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}