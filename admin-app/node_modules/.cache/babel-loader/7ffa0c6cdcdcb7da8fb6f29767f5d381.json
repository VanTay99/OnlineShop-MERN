{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { authContants } from \"./constants\";\nexport const login = user => {\n  console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authContants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/admin/signin`, { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch({\n        type: authContants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authContants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const signup = user => {\n  console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authContants.LOGIN_REQUEST\n    });\n    const res = await axios.post(`/admin/signup`, { ...user\n    });\n\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      dispatch({\n        type: authContants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authContants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem('user'));\n      dispatch({\n        type: authContants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authContants.LOGIN_FAILURE,\n        payload: {\n          error: 'Failed to login'\n        }\n      });\n    }\n  };\n};\nexport const singout = () => {\n  return async dispatch => {\n    localStorage.clear();\n    dispatch({\n      type: authContants.LOGOUT_REQUEST\n    });\n  };\n};","map":{"version":3,"sources":["D:/Course IT/OnlineShop-MERN/admin-app/src/actions/auth.action.js"],"names":["axios","authContants","login","user","console","log","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","signup","isUserLoggedIn","getItem","parse","singout","clear","LOGOUT_REQUEST"],"mappings":"AACA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AAEA,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAU;AAE3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,MAAOG,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,YAAY,CAACO;AAArB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,eAAZ,EAA4B,EAC1C,GAAGP;AADuC,KAA5B,CAAlB;;AAGA,QAAIM,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,YAAM;AAAEC,QAAAA,KAAF;AAAST,QAAAA;AAAT,UAAkBM,GAAG,CAACI,IAA5B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,IAAf,CAA7B;AACAG,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,YAAY,CAACiB,aADd;AAELC,QAAAA,OAAO,EAAE;AACLP,UAAAA,KADK;AACET,UAAAA;AADF;AAFJ,OAAD,CAAR;AAOH,KAXD,MAYK;AACD,UAAIM,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpBL,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEN,YAAY,CAACmB,aADd;AAELD,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAEZ,GAAG,CAACI,IAAJ,CAASQ;AAAlB;AAFJ,SAAD,CAAR;AAIH;AACJ;AAGJ,GA3BD;AA4BH,CA/BM;AAiCP,OAAO,MAAMC,MAAM,GAAInB,IAAD,IAAU;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,MAAOG,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,YAAY,CAACO;AAArB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,eAAZ,EAA4B,EAC1C,GAAGP;AADuC,KAA5B,CAAlB;;AAGA,QAAIM,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpB,YAAM;AAAEC,QAAAA,KAAF;AAAST,QAAAA;AAAT,UAAkBM,GAAG,CAACI,IAA5B;AACAP,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,YAAY,CAACiB,aADd;AAELC,QAAAA,OAAO,EAAE;AACLP,UAAAA,KADK;AACET,UAAAA;AADF;AAFJ,OAAD,CAAR;AAOH,KATD,MAUK;AACD,UAAIM,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACpBL,QAAAA,QAAQ,CAAC;AACLC,UAAAA,IAAI,EAAEN,YAAY,CAACmB,aADd;AAELD,UAAAA,OAAO,EAAE;AAAEE,YAAAA,KAAK,EAAEZ,GAAG,CAACI,IAAJ,CAASQ;AAAlB;AAFJ,SAAD,CAAR;AAIH;AACJ;AAGJ,GAzBD;AA0BH,CA7BM;AA+BP,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAO,MAAMjB,QAAN,IAAkB;AACrB,UAAMM,KAAK,GAAGE,YAAY,CAACU,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIZ,KAAJ,EAAW;AACP,YAAMT,IAAI,GAAGa,IAAI,CAACS,KAAL,CAAWX,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAb;AACAlB,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,YAAY,CAACiB,aADd;AAELC,QAAAA,OAAO,EAAE;AACLP,UAAAA,KADK;AACET,UAAAA;AADF;AAFJ,OAAD,CAAR;AAOH,KATD,MAUK;AACDG,MAAAA,QAAQ,CAAC;AACLC,QAAAA,IAAI,EAAEN,YAAY,CAACmB,aADd;AAELD,QAAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT;AAFJ,OAAD,CAAR;AAIH;AACJ,GAlBD;AAmBH,CApBM;AAsBP,OAAO,MAAMK,OAAO,GAAE,MAAI;AACtB,SAAO,MAAMpB,QAAN,IAAiB;AACpBQ,IAAAA,YAAY,CAACa,KAAb;AACArB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,YAAY,CAAC2B;AADd,KAAD,CAAR;AAGH,GALD;AAMH,CAPM","sourcesContent":["\r\nimport axios from \"../helpers/axios\";\r\n\r\nimport { authContants } from \"./constants\";\r\n\r\nexport const login = (user) => {\r\n\r\n    console.log(user);\r\n    return async (dispatch) => {\r\n        dispatch({ type: authContants.LOGIN_REQUEST })\r\n        const res = await axios.post(`/admin/signin`, {\r\n            ...user\r\n        });\r\n        if (res.status === 200) {\r\n            const { token, user } = res.data;\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            dispatch({\r\n                type: authContants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n\r\n            });\r\n        }\r\n        else {\r\n            if (res.status === 400) {\r\n                dispatch({\r\n                    type: authContants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const signup = (user) => {\r\n\r\n    console.log(user);\r\n    return async (dispatch) => {\r\n        dispatch({ type: authContants.LOGIN_REQUEST })\r\n        const res = await axios.post(`/admin/signup`, {\r\n            ...user\r\n        });\r\n        if (res.status === 200) {\r\n            const { token, user } = res.data;\r\n            dispatch({\r\n                type: authContants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n\r\n            });\r\n        }\r\n        else {\r\n            if (res.status === 400) {\r\n                dispatch({\r\n                    type: authContants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: authContants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n\r\n            });\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: authContants.LOGIN_FAILURE,\r\n                payload: { error: 'Failed to login' }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const singout =()=>{\r\n    return async dispatch =>{\r\n        localStorage.clear();\r\n        dispatch({\r\n            type: authContants.LOGOUT_REQUEST\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}